/**
 * Pivonia Library
 *
 */
plugins {
    id "java"
    id "groovy" // for Spock
    id "maven-publish"
}

configurations {
    deployerJars
}

/**
 * Settings
 */
rootProject.group = "eu.phisikus.pivonia"
rootProject.version = "0.0.32"


/**
 * Dependencies
 */

repositories {
    mavenCentral()
}

/**
 * Java
 */
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withJavadocJar()
    withSourcesJar()
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}


dependencies {

    /**
     * Lombok
     */
    annotationProcessor "org.projectlombok:lombok:1.18.22"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.22"
    implementation "org.projectlombok:lombok:1.18.22"

    /**
     * Dependency Injection
     */
    annotationProcessor "com.google.dagger:dagger-compiler:2.40.1"
    implementation "com.google.dagger:dagger:2.40.1"

    /**
     * Serialization
     */
    implementation "de.undercouch:bson4jackson:2.13.0"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.13.0"

    /**
     * Encryption
     */
    implementation "com.google.crypto.tink:tink:1.6.1"

    /**
     * Utils
     */
    implementation "io.vavr:vavr:0.10.4"
    implementation "io.github.resilience4j:resilience4j-retry:1.6.1"
    implementation "org.apache.logging.log4j:log4j-api:2.14.1"
    implementation "org.apache.logging.log4j:log4j-core:2.14.1"
    implementation "io.reactivex.rxjava2:rxjava:2.2.21"

    /**
     * Testing
     */
    testImplementation "org.codehaus.groovy:groovy-all:3.0.9"
    testImplementation "org.spockframework:spock-core:2.0-groovy-3.0"
    testImplementation "cglib:cglib-nodep:3.3.0"
    testImplementation "org.objenesis:objenesis:3.1"
    testImplementation "org.awaitility:awaitility:4.1.1"

}


/**
 * Test configuration
 */
test {
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
    useJUnitPlatform()
}

/**
 * Maven Publishing
 */
publishing {
    publications {
        gpr(MavenPublication) {
            groupId = rootProject.group
            artifactId = rootProject.name
            version = rootProject.version

            from components.java

            pom {
                name = "Pivonia"
                description = "Message Passing Library"
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/phisikus/pivonia")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}


/**
 * Custom task for CI
 */
tasks.register("release") {
    description = "Releases new library version"
    dependsOn = ["clean", "build", "publish"]
}
